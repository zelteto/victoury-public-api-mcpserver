{
  "name": "Victoury Dynamic Credentials Example",
  "nodes": [
    {
      "parameters": {},
      "id": "start",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "jsCode": "// Define your different Victoury environments\nconst environments = [\n  {\n    name: \"Production\",\n    credentials: {\n      apiUrl: \"https://api.victoury.com/v2\",\n      tenant: \"prod-tenant-key\",\n      sessionId: \"prod-session-id\"\n    }\n  },\n  {\n    name: \"Staging\",\n    credentials: {\n      apiUrl: \"https://staging.victoury.com/v2\",\n      tenant: \"staging-tenant-key\",\n      sessionId: \"staging-session-id\"\n    }\n  },\n  {\n    name: \"Client A\",\n    credentials: {\n      apiUrl: \"https://api.client-a.victoury.com/v2\",\n      tenant: \"client-a-tenant\",\n      sessionId: \"client-a-session\"\n    }\n  }\n];\n\n// Return all environments for processing\nreturn environments.map(env => ({ json: env }));"
      },
      "id": "setup-environments",
      "name": "Setup Environments",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://victoury-mcp:3000/tools/list_products",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "arguments",
              "value": "={{ { \"limit\": 5, \"category\": \"tours\" } }}"
            },
            {
              "name": "credentials",
              "value": "={{ $json.credentials }}"
            }
          ]
        },
        "options": {}
      },
      "id": "query-products",
      "name": "Query Products",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [650, 300]
    },
    {
      "parameters": {
        "jsCode": "// Aggregate results from all environments\nconst allResults = $input.all();\n\nconst summary = allResults.map((item, index) => {\n  const env = $node[\"Setup Environments\"].json[index];\n  return {\n    environment: env.name,\n    productCount: item.json.result?.data?.length || 0,\n    success: item.json.success || false,\n    products: item.json.result?.data || [],\n    error: item.json.error || null\n  };\n});\n\nreturn [{ json: { summary, totalEnvironments: summary.length } }];"
      },
      "id": "aggregate-results",
      "name": "Aggregate Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 300]
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Setup Environments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup Environments": {
      "main": [
        [
          {
            "node": "Query Products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Products": {
      "main": [
        [
          {
            "node": "Aggregate Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}