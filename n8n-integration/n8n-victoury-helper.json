{
  "name": "Victoury API Helper Functions",
  "nodes": [
    {
      "parameters": {
        "functionCode": "// Victoury API Helper Functions\n\nclass VictouryAPI {\n  constructor(credentials) {\n    this.baseUrl = 'http://victoury-mcp:3000';\n    this.credentials = credentials || {\n      apiUrl: $vars.victoury_api_url || 'https://api.victoury.com/v2',\n      tenant: $vars.victoury_tenant || 'your-tenant',\n      sessionId: $vars.victoury_session || 'your-session'\n    };\n  }\n\n  async callTool(toolName, args = {}) {\n    const response = await $http.request({\n      method: 'POST',\n      url: `${this.baseUrl}/tools/${toolName}`,\n      body: {\n        arguments: args,\n        credentials: this.credentials\n      }\n    });\n    return response;\n  }\n\n  async listProducts(options = {}) {\n    return this.callTool('list_products', options);\n  }\n\n  async searchCustomers(query) {\n    return this.callTool('search_customers', { query });\n  }\n\n  async createBooking(data) {\n    return this.callTool('create_booking', data);\n  }\n\n  async checkAvailability(productId, dates) {\n    return this.callTool('list_availability', {\n      productId,\n      ...dates\n    });\n  }\n}\n\n// Usage example\nconst api = new VictouryAPI();\n\n// Get products\nconst products = await api.listProducts({ limit: 5, category: 'tours' });\n\n// Search customers\nconst customers = await api.searchCustomers('john@example.com');\n\nreturn {\n  products: products.result?.data || [],\n  customers: customers.result?.data || [],\n  productCount: products.result?.data?.length || 0,\n  customerCount: customers.result?.data?.length || 0\n};"
      },
      "id": "helper-functions",
      "name": "Victoury API Helper",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 300]
    }
  ]
}