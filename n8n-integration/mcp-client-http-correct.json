{
  "name": "Victoury MCP Client (HTTP Transport)",
  "nodes": [
    {
      "parameters": {},
      "id": "trigger",
      "name": "Start",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "content": "## MCP Client Tool Configuration\n\nThe MCP Client Tool needs to be configured based on your transport type:\n\n### For HTTP MCP Server (Your Case):\n- **Transport**: HTTP\n- **HTTP URL**: http://victoury-mcp:3000\n- **HTTP Method**: POST\n\n### Available Tools:\nYour server exposes these tools:\n- list_products\n- search_customers\n- create_booking\n- list_availability\n- get_deal_details\n- And many more...\n\n### Note:\nThe MCP Client Tool will automatically discover available tools from your server.",
        "height": 400,
        "width": 500
      },
      "id": "instructions",
      "name": "Configuration Guide",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [200, 50]
    },
    {
      "parameters": {
        "name": "List Victoury Products",
        "description": "Get a list of available tours and products",
        "transport": "http",
        "httpUrl": "http://victoury-mcp:3000",
        "httpMethod": "POST",
        "httpHeaders": "={{ { \"Content-Type\": \"application/json\" } }}",
        "toolChoice": "required",
        "toolName": "list_products",
        "toolInput": "={{ { \"limit\": 5, \"category\": \"tours\" } }}"
      },
      "id": "mcp-client",
      "name": "MCP Client - Victoury",
      "type": "n8n-nodes-mcp.mcpClient",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "jsCode": "// Process the MCP response\nconst response = $input.first().json;\n\nif (response.success) {\n  const products = response.result?.data || [];\n  return {\n    success: true,\n    productCount: products.length,\n    products: products.map(p => ({\n      id: p.id,\n      name: p.name,\n      category: p.category,\n      price: p.price\n    }))\n  };\n} else {\n  return {\n    success: false,\n    error: response.error || 'Unknown error'\n  };\n}"
      },
      "id": "process",
      "name": "Process Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300]
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "MCP Client - Victoury",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - Victoury": {
      "main": [
        [
          {
            "node": "Process Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}