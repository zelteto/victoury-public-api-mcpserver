version: '3.8'

services:
  # n8n workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=changeme
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows
    networks:
      - victoury-network

  # Victoury MCP HTTP Server for production
  victoury-mcp-prod:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: victoury-mcp-prod
    command: ["npm", "run", "http-server"]
    restart: unless-stopped
    ports:
      - "3001:3000"
    env_file:
      - ./envs/production.env
    environment:
      - HTTP_PORT=3000
      - NODE_ENV=production
    networks:
      - victoury-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Victoury MCP HTTP Server for staging
  victoury-mcp-staging:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: victoury-mcp-staging
    command: ["npm", "run", "http-server"]
    restart: unless-stopped
    ports:
      - "3002:3000"
    env_file:
      - ./envs/staging.env
    environment:
      - HTTP_PORT=3000
      - NODE_ENV=staging
    networks:
      - victoury-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL for n8n (for production use)
  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n
      - POSTGRES_DB=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - victoury-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  victoury-network:
    driver: bridge
    name: victoury-n8n-network

volumes:
  n8n_data:
    name: n8n_data
  postgres_data:
    name: n8n_postgres_data