# Environments Configuration
# This file defines environment-specific settings that work together with env files

environments:
  # Each environment name here must have a matching envs/{name}.env file
  
  development:
    port: 3000          # Maps to HOST_PORT in docker-compose
    build_args:
      NODE_ENV: development
    description: "Local development environment"
    
  staging:
    port: 3001
    build_args:
      NODE_ENV: production
    description: "Staging environment for testing"
    
  production:
    port: 3002
    build_args:
      NODE_ENV: production
    description: "Production environment"
    
  # Client-specific environments
  client-a:
    port: 3010
    build_args:
      NODE_ENV: production
    description: "Client A production instance"
    
  client-b:
    port: 3011
    build_args:
      NODE_ENV: production
    description: "Client B production instance"
    
  client-a-staging:
    port: 3020
    build_args:
      NODE_ENV: staging
    description: "Client A staging instance"

# How this works:
# 1. When you run: ./scripts/deploy.sh client-a
# 2. The script looks for: envs/client-a.env (contains API credentials)
# 3. The script reads: configs/environments.yml (gets port 3010)
# 4. Docker runs with: credentials from .env + port from .yml